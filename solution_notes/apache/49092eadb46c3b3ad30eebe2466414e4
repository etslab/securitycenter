**Severity:** High

**OWASP Top 10 2021 Category:** Insecure Design

**Solution:**

To fix the issue, you need to remove the suspicious string from the code. In this case, the suspicious string is:

```javascript
res.redirect(errorUrl);
```

This string is vulnerable to Open Redirect attack. An attacker can trick a user into clicking a link that redirects them to a malicious website. To fix this issue, you should use a URL validation function to ensure that the redirect URL is valid before redirecting the user.

Here is the fixed code:

```javascript
const validUrlRegex = /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/;
if (validUrlRegex.test(errorUrl)) {
  res.redirect(errorUrl);
} else {
  res.status(400).send('Invalid redirect URL');
}
```

By implementing this fix, you will mitigate the risk of Open Redirect attack and improve the security of your application.
