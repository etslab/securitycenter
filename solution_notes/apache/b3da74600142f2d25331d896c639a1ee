## Severity Assessment

The severity of this issue is **Medium**.

## Rule Description

The sonarqube rule php:S6600 detects the use of `include` or `require` statements with uncontrolled user input, which can lead to arbitrary file inclusion and remote code execution vulnerabilities.

## Solution

To fix this issue, user-controlled input should be sanitized before being used in `include` or `require` statements. This can be done using techniques such as whitelisting, input validation, or escaping.

For example, the following code is vulnerable to the arbitrary file inclusion vulnerability:

```php
<?php
$file = $_GET['file'];
include $file;
?>
```

This code can be fixed by whitelisting the allowed files:

```php
<?php
$file = $_GET['file'];
$allowedFiles = ['file1.php', 'file2.php'];
if (in_array($file, $allowedFiles)) {
  include $file;
} else {
  echo "Invalid file";
}
?>
```

Alternatively, the input can be escaped before being used in the `include` statement:

```php
<?php
$file = $_GET['file'];
$escapedFile = htmlspecialchars($file);
include $escapedFile;
?>
```

## OWASP Top 10 2021 Category

This issue falls under the **Injection** category of the OWASP Top 10 2021.
