**Severity:** Medium

**OWASP Top 10 2021 Category:** Injection

**Detailed Solution:**

The net/mail package in Go mishandles comments in email display names when rendered by the Apache server. This can lead to arbitrary HTML being injected into the server's response, potentially allowing an attacker to execute cross-site scripting (XSS) attacks.

To fix this issue, ensure that all email display names are properly escaped before being used in the `net/mail` package. This can be done using the `html.EscapeString` function, as follows:

```go
import "html"

func sendMail(sender, receiver, subject, body string) error {
    // Escape the sender's display name to prevent injection.
    senderName := html.EscapeString(sender)
    
    m := &mail.Message{
        Header: mail.Header{
            "From":    formatAddress(senderName, sender),
            "To":      receiver,
            "Subject": subject,
        },
        Body: []byte(body),
    }
    
    // ...
    
    return nil
}
```

Alternatively, you can set the Content-Type header of the email to "text/plain" to prevent the Apache server from rendering HTML in the display name. However, this may not be appropriate in all cases, as it can affect the formatting of the email.

**Additional Notes:**

This issue has been fixed in the latest version of Go. If you are using an older version, it is recommended to upgrade to the latest version to receive the security fix.
