**Severity:** Medium

**OWASP Top 10 2021 Category:** Broken Access Control

**Solution:**

To fix this issue, apply the following patch to coreutils:

```bash
diff -Naur coreutils-9.1/src/chroot.c coreutils-9.1-patched/src/chroot.c
--- coreutils-9.1/src/chroot.c	2023-05-16 10:39:17.223414223 +0900
+++ coreutils-9.1-patched/src/chroot.c	2023-05-16 10:58:45.203350000 +0900
@@ -57,6 +57,9 @@ chroot (const char *path)
 #   define __user /* empty */
 # endif

+#if defined(__OpenBSD__) || defined(__FreeBSD__)
+# error "chroot escape vulnerability mitigation not implemented on this platform"
+#endif

   /* Only root goes on. */
   if (getuid() != 0)
     error (0, 0, "chroot requires root privileges");
```

This patch disables the chroot escape vulnerability mitigation on OpenBSD and FreeBSD platforms since it is not implemented on these platforms.

**Additional Mitigation:**

In addition to applying the patch, consider the following mitigation measures:

* Use the "chroot_escape_control" module in Apache to restrict the ability of processes to escape from the chroot environment.
* Configure Apache to run as a non-privileged user to reduce the impact of any potential escape attempts.
* Regularly review Apache configurations and ensure that they do not allow unauthorized access to the chroot environment.
