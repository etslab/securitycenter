**Severity:** Medium

**OWASP Top 10 2021 Category:** Sensitive Data Exposure

**Issue Description:**

The issue is related to the Parsedown PHP library, specifically the `text($text)` function in the `Parsedown.php` file. This function is vulnerable to cross-site scripting (XSS) attacks because it does not properly sanitize user-provided input. An attacker could exploit this vulnerability by crafting a malicious payload and submitting it through a vulnerable input field, which could result in the execution of arbitrary JavaScript code on the user's browser.

**Solution:**

To fix this issue, the `text()` function should be updated to properly sanitize user-provided input. This can be done by using a whitelisting approach or a library like HTML Purifier.

**Example Fix:**

Replace the following code:

```php
return $text;
```

With:

```php
return htmlspecialchars($text, ENT_QUOTES, 'UTF-8');
```

Alternatively, you can use HTML Purifier for more advanced sanitization:

```php
require_once('HTMLPurifier.auto.php');
$config = HTMLPurifier_Config::createDefault();
$purifier = new HTMLPurifier($config);
return $purifier->purify($text);
```
