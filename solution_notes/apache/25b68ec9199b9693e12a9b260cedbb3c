**Severity:** High

**OWASP Top 10 2021 Category:** Sensitive Data Exposure

**Description:**

The `net/http/cookiejar` package in Go does not correctly handle HTTP redirects, which can lead to sensitive headers and cookies being forwarded to unintended destinations. This can occur when a user clicks on a malicious link that redirects them to a different server.

**Impact:**

An attacker could use this vulnerability to steal sensitive information, such as session tokens or authentication cookies, which could allow them to hijack user accounts or access sensitive data.

**Solution:**

To fix this issue, use the `context.Context` object to pass a `*http.Client` with the correct `CookieJar` implementation. Here is an example:

```go
func main() {
	ctx := context.Background()

	// Create a custom cookiejar that does not forward sensitive headers
	jar := &cookiejar.Jar{
		Options: &cookiejar.Options{
			PublicSuffixList: publicsuffix.List,
		},
		SensitiveHeaders: []string{
			"Authorization",
			"Cookie",
		},
	}

	client := &http.Client{
		Jar: jar,
	}

	req, err := http.NewRequest("GET", "https://example.com", nil)
	if err != nil {
		// Handle error
	}

	resp, err := client.Do(req)
	if err != nil {
		// Handle error
	}
	
	// Use resp as needed
}
```

**Additional Notes:**

* This issue was patched in Go 1.15.14.
* It is recommended to update to the latest version of Go to mitigate this vulnerability.
